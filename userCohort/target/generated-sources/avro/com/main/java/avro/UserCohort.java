/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.main.java.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserCohort extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserCohort\",\"namespace\":\"com.main.java.avro\",\"fields\":[{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cohortInfoList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CohortInfo\",\"fields\":[{\"name\":\"cohortId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String userId;
  @Deprecated public java.util.List<com.main.java.avro.CohortInfo> cohortInfoList;

  /**
   * Default constructor.
   */
  public UserCohort() {}

  /**
   * All-args constructor.
   */
  public UserCohort(java.lang.String userId, java.util.List<com.main.java.avro.CohortInfo> cohortInfoList) {
    this.userId = userId;
    this.cohortInfoList = cohortInfoList;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userId;
    case 1: return cohortInfoList;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userId = (java.lang.String)value$; break;
    case 1: cohortInfoList = (java.util.List<com.main.java.avro.CohortInfo>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public java.lang.String getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'cohortInfoList' field.
   */
  public java.util.List<com.main.java.avro.CohortInfo> getCohortInfoList() {
    return cohortInfoList;
  }

  /**
   * Sets the value of the 'cohortInfoList' field.
   * @param value the value to set.
   */
  public void setCohortInfoList(java.util.List<com.main.java.avro.CohortInfo> value) {
    this.cohortInfoList = value;
  }

  /** Creates a new UserCohort RecordBuilder */
  public static com.main.java.avro.UserCohort.Builder newBuilder() {
    return new com.main.java.avro.UserCohort.Builder();
  }
  
  /** Creates a new UserCohort RecordBuilder by copying an existing Builder */
  public static com.main.java.avro.UserCohort.Builder newBuilder(com.main.java.avro.UserCohort.Builder other) {
    return new com.main.java.avro.UserCohort.Builder(other);
  }
  
  /** Creates a new UserCohort RecordBuilder by copying an existing UserCohort instance */
  public static com.main.java.avro.UserCohort.Builder newBuilder(com.main.java.avro.UserCohort other) {
    return new com.main.java.avro.UserCohort.Builder(other);
  }
  
  /**
   * RecordBuilder for UserCohort instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserCohort>
    implements org.apache.avro.data.RecordBuilder<UserCohort> {

    private java.lang.String userId;
    private java.util.List<com.main.java.avro.CohortInfo> cohortInfoList;

    /** Creates a new Builder */
    private Builder() {
      super(com.main.java.avro.UserCohort.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.main.java.avro.UserCohort.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing UserCohort instance */
    private Builder(com.main.java.avro.UserCohort other) {
            super(com.main.java.avro.UserCohort.SCHEMA$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cohortInfoList)) {
        this.cohortInfoList = data().deepCopy(fields()[1].schema(), other.cohortInfoList);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'userId' field */
    public java.lang.String getUserId() {
      return userId;
    }
    
    /** Sets the value of the 'userId' field */
    public com.main.java.avro.UserCohort.Builder setUserId(java.lang.String value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'userId' field */
    public com.main.java.avro.UserCohort.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'cohortInfoList' field */
    public java.util.List<com.main.java.avro.CohortInfo> getCohortInfoList() {
      return cohortInfoList;
    }
    
    /** Sets the value of the 'cohortInfoList' field */
    public com.main.java.avro.UserCohort.Builder setCohortInfoList(java.util.List<com.main.java.avro.CohortInfo> value) {
      validate(fields()[1], value);
      this.cohortInfoList = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'cohortInfoList' field has been set */
    public boolean hasCohortInfoList() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'cohortInfoList' field */
    public com.main.java.avro.UserCohort.Builder clearCohortInfoList() {
      cohortInfoList = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public UserCohort build() {
      try {
        UserCohort record = new UserCohort();
        record.userId = fieldSetFlags()[0] ? this.userId : (java.lang.String) defaultValue(fields()[0]);
        record.cohortInfoList = fieldSetFlags()[1] ? this.cohortInfoList : (java.util.List<com.main.java.avro.CohortInfo>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
