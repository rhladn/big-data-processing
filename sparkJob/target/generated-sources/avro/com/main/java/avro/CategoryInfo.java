/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.main.java.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CategoryInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CategoryInfo\",\"namespace\":\"com.main.java.avro\",\"fields\":[{\"name\":\"categoryId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String categoryId;

  /**
   * Default constructor.
   */
  public CategoryInfo() {}

  /**
   * All-args constructor.
   */
  public CategoryInfo(java.lang.String categoryId) {
    this.categoryId = categoryId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return categoryId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: categoryId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'categoryId' field.
   */
  public java.lang.String getCategoryId() {
    return categoryId;
  }

  /**
   * Sets the value of the 'categoryId' field.
   * @param value the value to set.
   */
  public void setCategoryId(java.lang.String value) {
    this.categoryId = value;
  }

  /** Creates a new CategoryInfo RecordBuilder */
  public static com.main.java.avro.CategoryInfo.Builder newBuilder() {
    return new com.main.java.avro.CategoryInfo.Builder();
  }
  
  /** Creates a new CategoryInfo RecordBuilder by copying an existing Builder */
  public static com.main.java.avro.CategoryInfo.Builder newBuilder(com.main.java.avro.CategoryInfo.Builder other) {
    return new com.main.java.avro.CategoryInfo.Builder(other);
  }
  
  /** Creates a new CategoryInfo RecordBuilder by copying an existing CategoryInfo instance */
  public static com.main.java.avro.CategoryInfo.Builder newBuilder(com.main.java.avro.CategoryInfo other) {
    return new com.main.java.avro.CategoryInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for CategoryInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CategoryInfo>
    implements org.apache.avro.data.RecordBuilder<CategoryInfo> {

    private java.lang.String categoryId;

    /** Creates a new Builder */
    private Builder() {
      super(com.main.java.avro.CategoryInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.main.java.avro.CategoryInfo.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing CategoryInfo instance */
    private Builder(com.main.java.avro.CategoryInfo other) {
            super(com.main.java.avro.CategoryInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.categoryId)) {
        this.categoryId = data().deepCopy(fields()[0].schema(), other.categoryId);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'categoryId' field */
    public java.lang.String getCategoryId() {
      return categoryId;
    }
    
    /** Sets the value of the 'categoryId' field */
    public com.main.java.avro.CategoryInfo.Builder setCategoryId(java.lang.String value) {
      validate(fields()[0], value);
      this.categoryId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'categoryId' field has been set */
    public boolean hasCategoryId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'categoryId' field */
    public com.main.java.avro.CategoryInfo.Builder clearCategoryId() {
      categoryId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public CategoryInfo build() {
      try {
        CategoryInfo record = new CategoryInfo();
        record.categoryId = fieldSetFlags()[0] ? this.categoryId : (java.lang.String) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
